@using System.Xml;
@model IeasteJson2Svg.Models.SvgDocument

@{
    ViewData["Title"] = "Details";
}
<br />
<div class="row">
    <div class="col-lg-6">
        <dl class="dl-horizontal">
            <dt>
                @Html.DisplayNameFor(model => model.DocumentName)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.DocumentName)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.Description)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.Description)
            </dd>
        </dl>
    </div>
    <div class="col-lg-6">
        <a asp-action="Index" asp-controller="DocumentsGenerator" asp-route-id="@Model.ID" class="btn btn-primary">Generate documents</a>
        <a asp-action="Edit" asp-route-id="@Model.ID" class="btn btn-warning">Edit</a>
        <a asp-action="Index" class="btn btn-danger">Back to List</a>
    </div>
</div>
<div class="container">
    <div class="row">
        <div class="well">
            <img class="center-block" src="@Model.DocumentPath" style="border:2px solid #021a40" />
        </div>
    </div>
    @{ 
        var elements = ViewData["Elements"] as List<SvgElement>;
    }
<div class="row well center-block">
    <div id="alert" class="alert alert-info text-center" role="alert" hidden>
        Alert
    </div>
    <h3 class="list-heading text-center">Found elements</h3>
    <table class="table">
        <thead>
            <tr>
                <th>
                    Attribute name
                </th>
                <th>
                    Attribute inner text
                </th>
                <th>
                    Currently used
                </th>
                <th>
                    Change state
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @for (int i = 0; i < elements.Count; i++)
            {
                <tr class="elementRow">
                    <td>
                        <input class="elementId" type="hidden" value="@elements[i].Id" />
                        @elements[i].AttributeName
                    </td>
                    <td class="innerText">
                        @elements[i].AttributeInnerText
                    </td>
                    <td>
                        @if (elements[i].IsActive)
                        {
                            <span class="glyphicon glyphicon-plus" style="color: green"></span>
                        }
                        else
                        {
                            <span class="glyphicon glyphicon-minus" style="color: red"></span>
                        }
                    </td>
                    <td>
                        @Html.CheckBox("isactive", elements[i].IsActive, new { @class = "isActive" })
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <div class="row">
        <div class="text-center">
            <button id="submitBtn" class="btn btn-primary" onclick="set_elements_state()">Save changes</button>
        </div>
    </div>

</div>
</div>

<script>

    function set_elements_state() {
        data = new Object();
        var elementsDOM = $(".elementRow");
        for (var i = 0; i < elementsDOM.length; i++) {

            var id = parseInt(elementsDOM[i].querySelector(".elementId").value);
            var isActive = elementsDOM[i].querySelector(".isActive").checked;
            data["elements[" + i + "].Key"] = id;
            data["elements[" + i + "].Value"] = isActive;
        }

        $('#submitBtn').attr("disabled", true);
        $('.isActive').attr("disabled", true);

        $.ajax({
            type: "POST",
            url: '@Url.Action("SetActiveElements","SvgElements")',
            data: data,
            traditional: true,
        dataType: "json",
            success: function (result) {
                $('#submitBtn').attr("disabled", false);
                $('.isActive').attr("disabled", false);
                change_glyphicons();
                var alert = $('#alert');
                alert.html(result.message);
                alert.show();
            }
        });
        }

    function change_glyphicons() {
        var rows = $('.elementRow');

        for (var i = 0; i < rows.length; i++) {
            if (rows[i].querySelector('.isActive').checked) {
                var span = rows[i].querySelector('span');
                span.className = "glyphicon glyphicon-plus";
                span.style = "color: green";
            } else {
                var span = rows[i].querySelector('span');
                span.className = "glyphicon glyphicon-minus";
                span.style = "color: red";
            }
        }
    }

</script>
